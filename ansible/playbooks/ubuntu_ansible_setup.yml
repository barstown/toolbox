---
# Setup Ubuntu Workstation with apps and preferences
# Pre-requisites:
#   - sudo apt install python3-pip pipx python3-debian
#   - pipx install ansible-core
#   - pipx inject ansible-core python-debian
#   - ansible-galaxy collection install community.general
# Run with: ansible-playbook ubuntu_ansible_setup.yml -k -K

- name: Ubuntu workstation setup
  hosts: localhost
  gather_facts: true

  vars:
    apt_absent:
      - age
      - bat
      - btop
      - containerd
      - docker-compose
      - docker-compose-v2
      - docker-doc
      - docker.io
      - git-credential-oauth
      - htop
      - ncdu
      - neofetch
      - podman-docker
      - runc
      - tilix
      - tldr
    apt_present:
      - build-essential
      - code
      - containerd.io
      - distrobox
      - docker-buildx-plugin
      - docker-ce
      - docker-ce-cli
      - docker-compose-plugin
      - fd-find
      - ffmpeg
      - flatpak
      - git
      - gnome-shell-extension-alphabetical-grid
      - gnome-shell-extension-appindicator
      - gnome-software-plugin-flatpak
      - gnome-tweaks
      - pipx
      - podman
      - podman-compose
      - python3-debian
      - python3-pip
      - sshpass
      - tmux
      - vim
      - zram-config
      - zsh
    directories:
      - { path: "/home/{{ ansible_env.USER }}/.config/sops/age", mode: "0700" }
      - { path: "/home/{{ ansible_env.USER }}/.ssh", mode: "0700" }
      - { path: "/home/{{ ansible_env.USER }}/appimages", mode: "0755" }
      - { path: "/home/{{ ansible_env.USER }}/git", mode: "0755" }
    flatpak_absent: []
    flatpak_present:
      - app.devsuite.Ptyxis
      - ca.desrt.dconf-editor
      - com.github.IsmaelMartinez.teams_for_linux
      - com.github.tchx84.Flatseal
      - com.mattjakeman.ExtensionManager
      - com.ranfdev.DistroShelf
      - com.spotify.Client
      - com.usebottles.bottles
      - com.yubico.yubioath
      - io.github.flattool.Warehouse
      - io.github.getnf.embellish
      - io.github.peazip.PeaZip
      - io.github.realmazharhussain.GdmSettings
      - io.missioncenter.MissionCenter
      - io.podman_desktop.PodmanDesktop
      - it.mijorus.gearlever
      - me.iepure.devtoolbox
      - org.chromium.Chromium
      - org.cryptomator.Cryptomator
      - org.ferdium.Ferdium
      - org.filezillaproject.Filezilla
      - org.gimp.GIMP
      - org.gnome.seahorse.Application
      - org.kde.krita
      - org.libreoffice.LibreOffice
      - org.mozilla.firefox
      - org.pipewire.Helvum
      - org.remmina.Remmina
      - org.signal.Signal
      - org.videolan.VLC
      - page.tesk.Refine
      - sh.loft.devpod
    homebrew_absent: []
    homebrew_present:
      - age
      - bat
      - btop
      - fastfetch
      - gcc
      - git-credential-libsecret
      - git-credential-oauth
      - helm
      - htop
      - k9s
      - kubecolor
      - kubectl
      - kubent
      - ncdu
      - opentofu
      - skaffold
      - sops
      - tldr
    snap_absent:
      - firefox
    snap_present: []

  tasks:
    ## VARS ##
    - name: Gather the package facts
      ansible.builtin.package_facts:
        manager: auto

    ## HOMEDIR ##
    - name: Ensure directories exist with specific permissions
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        mode: "{{ item.mode }}"
      loop: "{{ directories }}"

    ## REPOS ##
    - name: Add VSCode APT repository
      ansible.builtin.deb822_repository:
        name: vscode
        types: deb
        uris: "https://packages.microsoft.com/repos/code"
        signed_by: "https://packages.microsoft.com/keys/microsoft.asc"
        suites: stable
        components: main
        state: present
        enabled: true
      become: true

    - name: Add Docker Engine apt key and repository
      block:
        - name: Docker | Add apt key
          ansible.builtin.get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/keyrings/docker.asc
            mode: "0644"
          become: true

        - name: Docker | Add apt repo
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
            state: present
            filename: docker
          become: true

    ## PACKAGES - SNAP ##
    - name: Uninstall snap packages
      community.general.snap:
        name: "{{ snap_absent }}"
        state: absent
      become: true
      when: snap_absent is defined and snap_absent | length > 0

    - name: Install snap packages
      community.general.snap:
        name: "{{ snap_present }}"
        state: present
      become: true
      when: snap_present is defined and snap_present | length > 0

    ## PACKAGES - APT ##
    - name: Uninstall apt packages
      ansible.builtin.apt:
        name: "{{ apt_absent }}"
        state: absent
        update_cache: true
      become: true
      when: apt_absent is defined and apt_absent | length > 0

    - name: Install apt packages
      ansible.builtin.apt:
        name: "{{ apt_present }}"
        state: present
        update_cache: true
      become: true
      when: apt_present is defined and apt_present | length > 0

    ## PACKAGES - FLATPAK ##
    - name: Add the flathub flatpak repository remote to the user installation
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo

    - name: Uninstall Flatpak packages
      community.general.flatpak:
        name: "{{ flatpak_absent }}"
        state: absent
      when: flatpak_absent is defined and flatpak_absent | length > 0

    - name: Install Flatpak packages
      community.general.flatpak:
        name: "{{ flatpak_present }}"
        remote: flathub
        state: present
      when: flatpak_present is defined and flatpak_present | length > 0

    ## PACKAGES - HOMEBREW ##
    - name: Check if Homebrew is already installed
      ansible.builtin.stat:
        path: "/home/linuxbrew/.linuxbrew/bin/brew"
      register: brew_stat

    - name: Install homebrew if not present
      when: not brew_stat.stat.exists
      environment:
        PATH: "/home/linuxbrew/.linuxbrew/bin:{{ ansible_env.PATH }}"
      block:
        - name: Create linuxbrew home directory
          ansible.builtin.file:
            path: "/home/linuxbrew"
            state: directory
            owner: "root"
            group: "root"
            mode: '0755'
          become: true

        - name: Create linuxbrew application directory
          ansible.builtin.file:
            path: "/home/linuxbrew/.linuxbrew"
            state: directory
            owner: "{{ ansible_env.USER }}"
            group: "{{ ansible_env.USER }}"
            mode: '0755'
          become: true

        - name: Download Homebrew tarball
          ansible.builtin.get_url:
            url: https://github.com/Homebrew/brew/tarball/main
            dest: /tmp/homebrew.tar.gz
            mode: '0644'

        - name: Extract Homebrew tarball
          ansible.builtin.unarchive:
            src: /tmp/homebrew.tar.gz
            dest: /home/linuxbrew/.linuxbrew
            remote_src: true
            extra_opts:
              - --strip-components=1

    - name: Uninstall homebrew packages
      community.general.homebrew:
        name: "{{ homebrew_absent }}"
        state: absent
      when: homebrew_absent is defined and homebrew_absent | length > 0

    - name: Install homebrew packages
      community.general.homebrew:
        name: "{{ homebrew_present }}"
        state: present
        update_homebrew: true
      when: homebrew_present is defined and homebrew_present | length > 0

    ## OTHER ##
    - name: Check if docker group exists and get its members
      ansible.builtin.getent:
        database: group
        key: docker
      register: docker_group_info
      failed_when: false

    - name: Add user to docker group if group exists and user not already a member
      ansible.builtin.user:
        name: "{{ ansible_env.USER }}"
        groups: docker
        append: true
      become: true
      when:
        - docker_group_info.ansible_facts.getent_group is defined
        - docker_group_info.ansible_facts.getent_group | length > 0
        - ansible_env.USER not in docker_group_info.ansible_facts.getent_group.docker
